@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" />
    <title></title>
    <link href="~/Content/bootstrap-3.3.7-dist/css/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-3.3.7-dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Script/jquery-3.1.1.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/echarts.min.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts-gl/echarts-gl.min.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts-stat/ecStat.min.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/extension/dataTool.min.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/map/js/china.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/map/js/world.js"></script>
    <script type="text/javascript" src="https://api.map.baidu.com/api?v=2.0&ak=ZUONbpqGBsYGXNIYHicvbAbM"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/extension/bmap.min.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/simplex.js"></script>
    <script src="~/My97DatePicker/My97DatePicker/WdatePicker.js"></script>
    <script src="~/Content/bootstrap-3.3.7-dist/js/bootstrap.min.js"></script>
</head>
<body style="height:1200px">
    <div style="width:100%;height:50px;background-color:black;z-index:10000000">
        <span style="color:white;font-size:35px;">大气环境网格化监管系统</span>
        <span style="color:white;margin-left:600px;"><a href="/MonitorPoint/Index?data=@Request.QueryString["Code"]" style="color:white">实时监测</a></span>
        <span style="margin-left:15px;display: inline-block;position: relative;">
            <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                统计分析<span class="caret"></span>
            </button>
            <ul style="z-index:100000001" class="dropdown-menu">
                <li><a href="/AnalyzeEcharts/ManyPollutants?Code=@Request.QueryString["Code"]">多站点污染物分析</a></li>
                <li><a href="/AnalyzeEcharts/SingleSite?Code=@Request.QueryString["Code"]">单站点污染物分析</a></li>
                <li><a href="/MonitorPoint/CxlMon?Code=@Request.QueryString["Code"]">月度数据分析</a></li>
                <li><a href="/MonitorPoint/CxlMonEcharts?Code=@Request.QueryString["Code"]">大气常规站污染分析</a></li>
                <li><a href="/Hot/AllIndex?Code=@Request.QueryString["Code"]">多站点年度污染分析</a></li>
                <li><a href="/Hot/Index?Code=@Request.QueryString["Code"]">单站点年度污染分析</a></li>
                <li><a href="Rangking?Code=@Request.QueryString["Code"]">站点数据排名统计</a></li>
                <li><a href="/Hot/PointInfo?Code=@Request.QueryString["Code"]">站点基本信息查询</a></li>
            </ul>
        </span>

    </div>
    <div style="position:fixed;left:0;width:200px;height:100%;background-color:red;z-index:10000000">
        <input type="text" name="PointName" /><input type="button" value="搜索" onclick="btnSearch()" />

        <table id="tab">
            <tr>
                <td>站点名称</td>
            </tr>
        </table>

    </div>
    <div id="div1" style="position:fixed;top:50px;left:400px;width:420px;height:40px;background-color:green;z-index:10000000">
    </div>
    @*<input style="position:fixed;top:50px;left:800px;" class="Wdate" type="text" onClick="WdatePicker({el:this,dateFmt:'yyyy-MM-dd HH:mm:ss'})"> <font color=red>&lt;- 点我弹出日期控件</font>*@
    @*<div style="position:fixed;top:50px;left:900px; background-color:gold;width:200px;height:40px;">
            <input  class="Wdate" type="text" onClick="WdatePicker({el:this,dateFmt:'yyyy-MM-dd HH:mm:ss'})"> <font color=red>&lt;- 点我弹出日期控件</font>
            <input type="text" />
        </div>*@
    <div style="position:fixed;top:50px;left:900px;width:220px;height:40px;background-color:white;z-index:10000000">
        <span>年份：</span>
        <input name="time" style="float:right;" class="Wdate" type="text" onClick="WdatePicker({el:this,dateFmt:'yyyy'})"> @*<font color=red>&lt;- 点我弹出日期控件</font>*@
        <input type="button" onclick="btnYear()" value="搜索" />
    </div>
    <div id="container" style="height: 100%; width:200%"></div>
</body>
</html>
<script type="text/javascript">
    @*var userids =@Request.QueryString["code"];*@
    var userids =@Request.QueryString["Code"];
    var PointId=140;
    var PolluantId = 11;
    var dom = document.getElementById("container");
    var myChart = echarts.init(dom);
    var app = {};
    option = null;
    app.title = '笛卡尔坐标系上的热力图';
    
    var Days = [];

    for (var i = 1; i < 367; i++) {
        Days.push(i);
    }

    var Hour = [ '1', '2',
        '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24'];

    var datas = [];

    $(function () {
        show();
        showtwo();
        showpoint();
        showPolluation();
    })

    function show() {
        $.ajax({
            url: 'http://localhost:8099/GetHourDatas',
            type: 'get',
            data: {
                id: PointId,
                polluantid: PolluantId,
                monitortime:2019
            },
            success: function (data) {
                
                console.log(data);
                //console.log(data[0].AVGValue)
                //for (var i = 0; i < data.length; i++) {
                //    datas.push([i % 24, i / 24, data[i].AVGValue])

                //}
                //var date = new Date();
                //alert(date.getFullYear())
                //Math.ceil((new Date() - new Date(new Date().getFullYear().toString())) / (24 * 60 * 60 * 1000))
                $(data).each(function (index, data) {
                    var date = new Date(data.MonitorTime)
                    datas.push([Math.ceil((date - new Date(date.getFullYear().toString())+1000 * 60 * 60 * 9) / (24 * 60 * 60 * 1000))-1, date.getHours() , data.AVGValue])
                    
                })
                console.log(datas)
                myChart.setOption(option, true);
            }
        })
    }

    function showtwo() {
        $.ajax({
            url: 'http://localhost:8099/GetHourDatas',
            type: 'get',
            data: {
                id: PointId,
                polluantid: PolluantId,
                monitortime: 2019
            },
            success: function (data) {

                console.log(data);
                //console.log(data[0].AVGValue)
                //for (var i = 0; i < data.length; i++) {
                //    datas.push([i % 24, i / 24, data[i].AVGValue])

                //}
                //var date = new Date();
                //alert(date.getFullYear())
                //Math.ceil((new Date() - new Date(new Date().getFullYear().toString())) / (24 * 60 * 60 * 1000))
                $(data).each(function (index, data) {
                    var date = new Date(data.MonitorTime)
                    datas.push([Math.ceil((date - new Date(date.getFullYear().toString()) + 1000 * 60 * 60 * 9) / (24 * 60 * 60 * 1000)) - 1, date.getHours(), data.AVGValue])

                })
                console.log(datas)
                myChart.setOption({
                    series: [{
                        data: datas,
                    }]
                });
            }
        })
    }
   
    datas = datas.map(function (item) {
        
        return [item[1], item[0], item[2] || '-'];
    });

    option = {
        tooltip: {
            position: 'top'
        },
        animation: true,
        grid: {
            height: '50%',
            y: '10%'
        },
        xAxis: {
            type: 'category',
            data: Days,
            splitArea: {
                show: true
            }
        },
        yAxis: {
            type: 'category',
            data: Hour,
            splitArea: {
                show: true
            }
        },
        visualMap: {
            min: 0,
            max: 300,
            calculable: true,
            orient: 'horizontal',
            left: 'center',
            bottom: '15%'
        },
        series: [{
            name: 'Punch Card',
            type: 'heatmap',                         
            data: datas,
            itemStyle: {
                emphasis: {
                    shadowBlur: 10,
                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
            }
        }]
    };;
    if (option && typeof option === "object") {
        
    }


    
    //左侧侧边栏显示站点
    function showpoint() {
        $.ajax({
            url: "http://localhost:8099/GetMonitorPoints",
            type: "get",
            data: {
                pointname: $("input[name=PointName]").val(),
                userid: userids
            },
            success: function (data) {
                console.log(data)
                $("#tab tr").not(":first").remove();
                $(data).each(function (index, data) {
                    
                    $("#tab").append("<tr><td><a onclick='btnLj(" + data.Id + ")'>" + data.PointName + "</a></td></tr>")
                })
            }
        })
    }
    //搜索站点
    function btnSearch() {
        showpoint();
    }
    //点击左侧站点显示对应数据
    function btnLj(id) {
        PointId = id;
        showtwo(PointId);
        //$.ajax({
        //    url: 'http://localhost:8099/GetHourDatas',
        //    type: 'get',
        //    data: {
        //        id: id,
        //        polluantid: 11,
        //        monitortime: 2019
        //    },
        //    success: function (data) {
        //        datas.splice(0, datas.length)
                
        //        $(data).each(function (index, data) {
        //            var date = new Date(data.MonitorTime)
        //            datas.push([Math.ceil((date - new Date(date.getFullYear().toString()) + 1000 * 60 * 60 * 9) / (24 * 60 * 60 * 1000)) - 1, date.getHours(), data.AVGValue])

        //        })
        //        console.log(datas)
        //        myChart.setOption({
        //            series: [{
        //                data: datas,
        //            }]
        //        });
        //    }
        //})
    }

    //显示污染物按钮
    function showPolluation() {
        $.ajax({
            url: "http://localhost:8099/GetPollutants",
            type: "get",
            success: function (data) {
                console.log(data);
                $(data).each(function (index, data) {
                    //console.log(data.Id);
                    $("#div1").append("<input style='width: 60px; height: 40px;' type='button' value=" + data.PollutantName + " onclick='btnPo(" + data.Id + ")' />")
                })
            }

        })
    }

    function btnPo(id) {
        PolluantId = id;
        showtwo(PolluantId);
        //$.ajax({
        //    url: "http://localhost:8099/GetMonitorPoints",
        //    type: "get",
        //    data: { pointname: $("input[name=PointName]").val() },
        //    success: function (data) {
        //        alert(1)
        //        console.log(data);
        //        console.log(data.Id);
        //        console.log(data[0].Id)
        //        $(data).each(function (index, data) {
        //            $.ajax({
        //                url: 'http://localhost:8099/GetHourDatas',
        //                type: 'get',
        //                data: {
        //                    id: data.Id,
        //                    polluantid: id,
        //                    monitortime: 2019
        //                },
        //                success: function (data) {
        //                    //console.log(data);
        //                    //console.log(data[0].AVGValue)
        //                    //for (var i = 0; i < data.length; i++) {
        //                    //    datas.push([i % 24, i / 24, data[i].AVGValue])

        //                    //}
        //                    $(data).each(function (index, data) {
        //                        var date = new Date(data.MonitorTime)
        //                        datas.push([Math.ceil((date - new Date(date.getFullYear().toString()) + 1000 * 60 * 60 * 9) / (24 * 60 * 60 * 1000)) - 1, date.getHours(), data.AVGValue])

        //                    })
        //                    myChart.setOption({
        //                        series: [{
        //                            data: datas,
        //                        }]
        //                    });
        //                }
        //            })
        //        })
                
        //    }
        //})
      
    }


    function btnYear() {
        $.ajax({
            url: 'http://localhost:8099/GetHourDatas',
            type: 'get',
            data: {
                id: 140,
                polluantid: 11,
                monitortime: $("input[name=time]").val()

            },
            success: function (data) {
                //console.log(data);
                //console.log(data[0].AVGValue)
                //for (var i = 0; i < data.length; i++) {
                //    datas.push([i % 24, i / 24, data[i].AVGValue])

                //}
                datas = [];
                $(data).each(function (index, data) {
                    var date = new Date(data.MonitorTime)
                    datas.push([Math.ceil((date - new Date(date.getFullYear().toString()) + 1000 * 60 * 60 * 9) / (24 * 60 * 60 * 1000)) - 1, date.getHours(), data.AVGValue])

                })
                console.log(datas)
                myChart.setOption({
                    series: [{
                        data: datas,
                    }]
                });
            }
        })
    }

</script>
