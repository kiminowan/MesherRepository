<!DOCTYPE html>
<script src="Script/jquery-1.7.2-min.js"></script>
<html style="height: 100%">

<head>
    <meta charset="utf-8">

</head>
<body style="height: 100%; margin: 0">
    <div id="div1" style="height: 100%;width:10%;float:left;">

        <input id="h1" type="hidden" value="@Request.QueryString["Code"]" />
        
    </div>

    <div style="height: 100%;width:90%;float:left">
        <div style="height:500px;width:100%;float:left">
            <div id="container" style="height: 100%;width:50%;float:left"></div>
            <div id="container1" style="height: 100%;width:50%;float:left"></div>
        </div>
        <div style="height: 500px;width:100%;float:left">
            <div id="container2" style="height: 100%;width:50%;float:left"></div>
            <div id="container3" style="height: 100%;width:50%;float:left"></div>
        </div>

        <div style="height: 500px;width:100%;float:left">
            <div id="container4" style="height: 100%;width:50%;float:left"></div>
            <div id="container5" style="height: 100%;width:50%;float:left"></div>
        </div>
        <div style="height: 500px;width:100%;float:left">
            <div id="container6" style="height: 100%;width:50%;float:left"></div>
            
        </div>
    </div>
    <link rel="stylesheet" href="lib/reset.css" />
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/echarts.min.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts-gl/echarts-gl.min.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts-stat/ecStat.min.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/extension/dataTool.min.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/map/js/china.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/map/js/world.js"></script>
    <script type="text/javascript" src="https://api.map.baidu.com/api?v=2.0&ak=ZUONbpqGBsYGXNIYHicvbAbM"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/extension/bmap.min.js"></script>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/simplex.js"></script>

    <script type="text/javascript">
        var dom = document.getElementById("container");
        var myChart = echarts.init(dom);
        var dom1 = document.getElementById("container1");
        var myChart1 = echarts.init(dom1);
        var dom2 = document.getElementById("container2");
        var myChart2 = echarts.init(dom2);
        var dom3 = document.getElementById("container3");
        var myChart3 = echarts.init(dom3);
        var dom4 = document.getElementById("container4");
        var myChart4 = echarts.init(dom4);
        var dom5 = document.getElementById("container5");
        var myChart5 = echarts.init(dom5);
        var dom6 = document.getElementById("container6");
        var myChart6 = echarts.init(dom6);
        var app = {};
        var xray = null;
        var arrPM2_5 = [];
        var arrPM10 = [];
        var arrSO2 = [];
        var arrO3 = [];
        var arrCO = [];
        var arrAQI = [];
        var arrNO2 = [];
        option = null;
        var data = [["2000-06-05", 0], ["2000-06-05", 0]]
        myChart.setOption(option = {
            //标题
            title: {
                text: 'PM2.5'
            },
            tooltip: {
                trigger: 'axis'
            },
            xAxis: {
                data: data.map(function (item) {
                    return item[0];
                })
            },
            yAxis: {
                splitLine: {
                    show: false
                }
            },

            dataZoom: [{
                startValue: '2014-06-01'
            }, {
                type: 'inside'
            }],
            visualMap: {
                pieces: [{
                    gt: 0,
                    lte: 50,
                    color: '#096'
                }, {
                    gt: 50,
                    lte: 100,
                    color: '#ffde33'
                }, {
                    gt: 100,
                    lte: 150,
                    color: '#ff9933'
                }, {
                    gt: 150,
                    lte: 200,
                    color: '#cc0033'
                }, {
                    gt: 200,
                    lte: 300,
                    color: '#660099'
                }, {
                    gt: 300,
                    color: '#7e0023'
                }],
                outOfRange: {
                    color: '#999'
                }
            },
            series: [{
                name: 'PM2.5',
                type: 'line',
                data: data.map(function (item) {
                    return item[1];
                }),
                //线条颜色说明
                markLine: {
                    silent: true,
                    data: [{
                        yAxis: 50
                    }, {
                        yAxis: 100
                    }, {
                        yAxis: 150
                    }, {
                        yAxis: 200
                    }, {
                        yAxis: 300
                    }]
                }
            }]
        });
        if (option && typeof option === "object") {
            myChart.setOption(option, true);
        }
        myChart1.setOption(option = {
            title: {
                text: 'PM10'
            },
            tooltip: {
                trigger: 'axis'
            },
            xAxis: {
                data: data.map(function (item) {
                    return item[0];
                })
            },
            yAxis: {
                splitLine: {
                    show: false
                }
            },

            dataZoom: [{
                startValue: '2014-06-01'
            }, {
                type: 'inside'
            }],
            visualMap: {
                pieces: [{
                    gt: 0,
                    lte: 50,
                    color: '#096'
                }, {
                    gt: 50,
                    lte: 100,
                    color: '#ffde33'
                }, {
                    gt: 100,
                    lte: 150,
                    color: '#ff9933'
                }, {
                    gt: 150,
                    lte: 200,
                    color: '#cc0033'
                }, {
                    gt: 200,
                    lte: 300,
                    color: '#660099'
                }, {
                    gt: 300,
                    color: '#7e0023'
                }],
                outOfRange: {
                    color: '#999'
                }
            },
            series: {
                name: 'AQI',
                type: 'line',
                data: data.map(function (item) {
                    return item[1];
                }),
                markLine: {
                    silent: true,
                    data: [{
                        yAxis: 50
                    }, {
                        yAxis: 100
                    }, {
                        yAxis: 150
                    }, {
                        yAxis: 200
                    }, {
                        yAxis: 300
                    }]
                }
            }
        });
        if (option && typeof option === "object") {
            myChart1.setOption(option, true);
        }
        myChart2.setOption(option = {
            title: {
                text: 'SO2'
            },
            tooltip: {
                trigger: 'axis'
            },
            xAxis: {
                data: data.map(function (item) {
                    return item[0];
                })
            },
            yAxis: {
                splitLine: {
                    show: false
                }
            },

            dataZoom: [{
                startValue: '2014-06-01'
            }, {
                type: 'inside'
            }],
            visualMap: {
                top: 10,
                right: 10,
                pieces: [{
                    gt: 0,
                    lte: 50,
                    color: '#096'
                }, {
                    gt: 50,
                    lte: 100,
                    color: '#ffde33'
                }, {
                    gt: 100,
                    lte: 150,
                    color: '#ff9933'
                }, {
                    gt: 150,
                    lte: 200,
                    color: '#cc0033'
                }, {
                    gt: 200,
                    lte: 300,
                    color: '#660099'
                }, {
                    gt: 300,
                    color: '#7e0023'
                }],
                outOfRange: {
                    color: '#999'
                }
            },
            series: {
                name: 'AQI',
                type: 'line',
                data: data.map(function (item) {
                    return item[1];
                }),
                markLine: {
                    silent: true,
                    data: [{
                        yAxis: 50
                    }, {
                        yAxis: 100
                    }, {
                        yAxis: 150
                    }, {
                        yAxis: 200
                    }, {
                        yAxis: 300
                    }]
                }
            }
        });
        if (option && typeof option === "object") {
            myChart2.setOption(option, true);
        }
        myChart3.setOption(option = {
            title: {
                text: 'NO2'
            },
            tooltip: {
                trigger: 'axis'
            },
            xAxis: {
                data: data.map(function (item) {
                    return item[0];
                })
            },
            yAxis: {
                splitLine: {
                    show: false
                }
            },

            dataZoom: [{
                startValue: '2014-06-01'
            }, {
                type: 'inside'
            }],
            visualMap: {
                top: 10,
                right: 10,
                pieces: [{
                    gt: 0,
                    lte: 50,
                    color: '#096'
                }, {
                    gt: 50,
                    lte: 100,
                    color: '#ffde33'
                }, {
                    gt: 100,
                    lte: 150,
                    color: '#ff9933'
                }, {
                    gt: 150,
                    lte: 200,
                    color: '#cc0033'
                }, {
                    gt: 200,
                    lte: 300,
                    color: '#660099'
                }, {
                    gt: 300,
                    color: '#7e0023'
                }],
                outOfRange: {
                    color: '#999'
                }
            },
            //控制多线条显示  数组形式
            series: {
                name: 'AQI',
                type: 'line',
                data: data.map(function (item) {
                    return item[1];
                }),
                markLine: {
                    silent: true,
                    data: [{
                        yAxis: 50
                    }, {
                        yAxis: 100
                    }, {
                        yAxis: 150
                    }, {
                        yAxis: 200
                    }, {
                        yAxis: 300
                    }]
                }
            }
        });
        if (option && typeof option === "object") {
            myChart3.setOption(option, true);
        }
        myChart4.setOption(option = {
            //标题
            title: {
                text: 'O3'
            },
            tooltip: {
                trigger: 'axis'
            },
            xAxis: {
                data: data.map(function (item) {
                    return item[0];
                })
            },
            yAxis: {
                splitLine: {
                    show: false
                }
            },

            dataZoom: [{
                startValue: '2014-06-01'
            }, {
                type: 'inside'
            }],
            visualMap: {
                pieces: [{
                    gt: 0,
                    lte: 50,
                    color: '#096'
                }, {
                    gt: 50,
                    lte: 100,
                    color: '#ffde33'
                }, {
                    gt: 100,
                    lte: 150,
                    color: '#ff9933'
                }, {
                    gt: 150,
                    lte: 200,
                    color: '#cc0033'
                }, {
                    gt: 200,
                    lte: 300,
                    color: '#660099'
                }, {
                    gt: 300,
                    color: '#7e0023'
                }],
                outOfRange: {
                    color: '#999'
                }
            },
            series: [{
                name: 'AQI',
                type: 'line',
                data: data.map(function (item) {
                    return item[1];
                }),
                markLine: {
                    silent: true,
                    data: [{
                        yAxis: 50
                    }, {
                        yAxis: 100
                    }, {
                        yAxis: 150
                    }, {
                        yAxis: 200
                    }, {
                        yAxis: 300
                    }]
                }
            }]
        });
        if (option && typeof option === "object") {
            myChart4.setOption(option, true);
        }
        myChart5.setOption(option = {
            //标题
            title: {
                text: 'CO'
            },
            tooltip: {
                trigger: 'axis'
            },
            xAxis: {
                data: data.map(function (item) {
                    return item[0];
                })
            },
            yAxis: {
                splitLine: {
                    show: false
                }
            },

            dataZoom: [{
                startValue: '2014-06-01'
            }, {
                type: 'inside'
            }],
            visualMap: {
                pieces: [{
                    gt: 0,
                    lte: 50,
                    color: '#096'
                }, {
                    gt: 50,
                    lte: 100,
                    color: '#ffde33'
                }, {
                    gt: 100,
                    lte: 150,
                    color: '#ff9933'
                }, {
                    gt: 150,
                    lte: 200,
                    color: '#cc0033'
                }, {
                    gt: 200,
                    lte: 300,
                    color: '#660099'
                }, {
                    gt: 300,
                    color: '#7e0023'
                }],
                outOfRange: {
                    color: '#999'
                }
            },
            series: [{
                name: 'AQI',
                type: 'line',
                data: data.map(function (item) {
                    return item[1];
                }),
                markLine: {
                    silent: true,
                    data: [{
                        yAxis: 50
                    }, {
                        yAxis: 100
                    }, {
                        yAxis: 150
                    }, {
                        yAxis: 200
                    }, {
                        yAxis: 300
                    }]
                }
            }]
        });
        if (option && typeof option === "object") {
            myChart5.setOption(option, true);
        }
        myChart6.setOption(option = {
            //标题
            title: {
                text: 'AQI'
            },
            tooltip: {
                trigger: 'axis'
            },
            xAxis: {
                data: data.map(function (item) {
                    return item[0];
                })
            },
            yAxis: {
                splitLine: {
                    show: false
                }
            },

            dataZoom: [{
                startValue: '2014-06-01'
            }, {
                type: 'inside'
            }],
            visualMap: {
                pieces: [{
                    gt: 0,
                    lte: 50,
                    color: '#096'
                }, {
                    gt: 50,
                    lte: 100,
                    color: '#ffde33'
                }, {
                    gt: 100,
                    lte: 150,
                    color: '#ff9933'
                }, {
                    gt: 150,
                    lte: 200,
                    color: '#cc0033'
                }, {
                    gt: 200,
                    lte: 300,
                    color: '#660099'
                }, {
                    gt: 300,
                    color: '#7e0023'
                }],
                outOfRange: {
                    color: '#999'
                }
            },
            series: [{
                name: 'AQI',
                type: 'line',
                data: data.map(function (item) {
                    return item[1];
                }),
                markLine: {
                    silent: true,
                    data: [{
                        yAxis: 50
                    }, {
                        yAxis: 100
                    }, {
                        yAxis: 150
                    }, {
                        yAxis: 200
                    }, {
                        yAxis: 300
                    }]
                }
            }]
        });
        if (option && typeof option === "object") {
            myChart6.setOption(option, true);
        }
    </script>
</body>
</html>
<script src="~/Script/jquery-3.1.1.js"></script>
<script>
    //通过用户id 获取到该地区的国控点
    $(function () {

        
        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetMonitorPoints?Code=' + $("#h1").val(),

            type: 'get',
            success: function (recc) {

                $(recc).each(function (index, recc) {
                    $("#div1").append("<input id=\"div2\" type=\"button\" value=\"" + recc.PointName + "\" style=\"width:127.3px; height: 50px\" onclick=\"fun(this)\" cxl=\"" + recc.Id + "\" class='btn'/>");

                })


            }



        })


    })
    //通过国控点id 站到距离最近的微站点
    function fun(obj) {
       

        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetZh',
            type: 'get',
            data: {
                "cor": $(obj).attr("cxl"),
                
            },
            success: function (data) {
                arrPM2_5 = [];
                $(data).each(function (index, data) {
                    //微站名称          国控点id            国控点名称
                    cxl(data.PointName, $(obj).attr("cxl"), $(obj).val())
                        

                    //$("#div1").append("<a value='" + data.PointName + "' href='javascript:;' onclick=cxl('" + data.PointName + "','" + $(obj).attr("cxl")+"')>'" + data.PointName + "'</a>");



                })
                myChart.setOption({
                    xAxis: xray,
                    series: arrPM2_5
                });
                //cxl($(obj).attr("cxl"));
               
                
            }
        })
        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetZh',
            type: 'get',
            data: {
                "cor": $(obj).attr("cxl"),

            },
            success: function (data) {
                arrPM10 = [];
                $(data).each(function (index, data) {
                    //微站名称          国控点id            国控点名称
                    cxle(data.PointName, $(obj).attr("cxl"), $(obj).val())


                    //$("#div1").append("<a value='" + data.PointName + "' href='javascript:;' onclick=cxl('" + data.PointName + "','" + $(obj).attr("cxl")+"')>'" + data.PointName + "'</a>");



                })
                myChart1.setOption({
                    xAxis: xray,
                    series: arrPM10
                });
                //cxl($(obj).attr("cxl"));


            }
        })
        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetZh',
            type: 'get',
            data: {
                "cor": $(obj).attr("cxl"),

            },
            success: function (data) {
                arrSO2 = [];
                $(data).each(function (index, data) {
                    //微站名称          国控点id            国控点名称
                    cxleS(data.PointName, $(obj).attr("cxl"), $(obj).val())


                    //$("#div1").append("<a value='" + data.PointName + "' href='javascript:;' onclick=cxl('" + data.PointName + "','" + $(obj).attr("cxl")+"')>'" + data.PointName + "'</a>");



                })
                myChart2.setOption({
                    xAxis: xray,
                    series: arrSO2
                });
                //cxl($(obj).attr("cxl"));


            }
        })
        //NO2
        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetZh',
            type: 'get',
            data: {
                "cor": $(obj).attr("cxl"),

            },
            success: function (data) {
                arrNO2 = [];
                $(data).each(function (index, data) {
                    //微站名称          国控点id            国控点名称
                    cxlen(data.PointName, $(obj).attr("cxl"), $(obj).val())


                    //$("#div1").append("<a value='" + data.PointName + "' href='javascript:;' onclick=cxl('" + data.PointName + "','" + $(obj).attr("cxl")+"')>'" + data.PointName + "'</a>");



                })
                myChart3.setOption({
                    xAxis: xray,
                    series: arrNO2
                });
                //cxl($(obj).attr("cxl"));


            }
        })
    //arrO3
        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetZh',
            type: 'get',
            data: {
                "cor": $(obj).attr("cxl"),

            },
            success: function (data) {
                arrO3 = [];
                $(data).each(function (index, data) {
                    //微站名称          国控点id            国控点名称
                    cxleo(data.PointName, $(obj).attr("cxl"), $(obj).val())


                    //$("#div1").append("<a value='" + data.PointName + "' href='javascript:;' onclick=cxl('" + data.PointName + "','" + $(obj).attr("cxl")+"')>'" + data.PointName + "'</a>");



                })
                myChart4.setOption({
                    xAxis: xray,
                    series: arrO3
                });
                //cxl($(obj).attr("cxl"));


            }
        })
        //CO
        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetZh',
            type: 'get',
            data: {
                "cor": $(obj).attr("cxl"),

            },
            success: function (data) {
                arrCO = [];
                $(data).each(function (index, data) {
                    //微站名称          国控点id            国控点名称
                    cxlec(data.PointName, $(obj).attr("cxl"), $(obj).val())


                    //$("#div1").append("<a value='" + data.PointName + "' href='javascript:;' onclick=cxl('" + data.PointName + "','" + $(obj).attr("cxl")+"')>'" + data.PointName + "'</a>");



                })
                myChart5.setOption({
                    xAxis: xray,
                    series: arrCO
                });
                //cxl($(obj).attr("cxl"));


            }
        })
        //AQI
        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetZh',
            type: 'get',
            data: {
                "cor": $(obj).attr("cxl"),

            },
            success: function (data) {
                arrAQI = [];
                $(data).each(function (index, data) {
                    //微站名称          国控点id            国控点名称
                    cxlea(data.PointName, $(obj).attr("cxl"), $(obj).val())


                    //$("#div1").append("<a value='" + data.PointName + "' href='javascript:;' onclick=cxl('" + data.PointName + "','" + $(obj).attr("cxl")+"')>'" + data.PointName + "'</a>");



                })
                myChart6.setOption({
                    xAxis: xray,
                    series: arrAQI
                });
                //cxl($(obj).attr("cxl"));


            }
        })
    }
    function cxl(obj,n,va) {
        

        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetNationalControls',
            type: 'get',
            async: false,
            data: {
                "Code": n,
                //污染物名称
                "pollname": "PM2.5",
                "name": obj
            },
            success: function (data) {
                
                i = [];
                    $(data).each(function (index, data) {
                        
                        i.push([data.MonitorTime, data.AVGValue]);
                    })
                arrPM2_5.push({
                    type: 'line',
                    name: obj,
                    data: i.map(function (item) {
                        return item[1];
                    }),
                })
                xray = {
                    data: i.map(function (item) {
                        return item[0];
                    })
                }
                
                
            }
        })
    }
    function cxle(obj, n, va) {
       

        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetNationalControls',
            type: 'get',
            async: false,
            data: {
                "Code": n,
                //污染物名称
                "pollname": "PM10",
                "name": obj
            },
            success: function (data) {

                i = [];
                $(data).each(function (index, data) {
                  
                    i.push([data.MonitorTime, data.AVGValue]);
                })
                arrPM10.push({
                    type: 'line',
                    name: obj,
                    data: i.map(function (item) {
                        return item[1];
                    }),
                })
                xray = {
                    data: i.map(function (item) {
                        return item[0];
                    })
                }

                
            }
        })
    }
    function cxleS(obj, n, va) {
        
        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetNationalControls',
            type: 'get',
            async: false,
            data: {
                "Code": n,
                //污染物名称
                "pollname": "SO2",
                "name": obj
            },
            success: function (data) {

                i = [];
                $(data).each(function (index, data) {
                    
                    i.push([data.MonitorTime, data.AVGValue]);
                })
                arrSO2.push({
                    type: 'line',
                    name: obj,
                    data: i.map(function (item) {
                        return item[1];
                    }),
                })
                xray = {
                    data: i.map(function (item) {
                        return item[0];
                    })
                }

                
            }
        })
    }
    function cxlen(obj, n, va) {
       

        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetNationalControls',
            type: 'get',
            async: false,
            data: {
                "Code": n,
                //污染物名称
                "pollname": "NO",
                "name": obj
            },
            success: function (data) {

                i = [];
                $(data).each(function (index, data) {
                   
                    i.push([data.MonitorTime.toString(), data.AVGValue]);
                })
                arrNO2.push({
                    type: 'line',
                    name: obj,
                    data: i.map(function (item) {
                        return item[1];
                    }),
                })
                xray = {
                    data: i.map(function (item) {
                        return item[0];
                    })
                }

               
            }
        })
    }
    function cxleo(obj, n, va) {
   

        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetNationalControls',
            type: 'get',
            async: false,
            data: {
                "Code": n,
                //污染物名称
                "pollname": "O3",
                "name": obj
            },
            success: function (data) {

                i = [];
                $(data).each(function (index, data) {
                    
                    i.push([data.MonitorTime, data.AVGValue]);
                })
                arrO3.push({
                    type: 'line',
                    name: obj,
                    data: i.map(function (item) {
                        return item[1];
                    }),
                })
                xray = {
                    data: i.map(function (item) {
                        return item[0];
                    })
                }

                
            }
        })
    }
    function cxlec(obj, n, va) {
       

        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetNationalControls',
            type: 'get',
            async: false,
            data: {
                "Code": n,
                //污染物名称
                "pollname": "CO",
                "name": obj
            },
            success: function (data) {

                i = [];
                $(data).each(function (index, data) {
                    
                    i.push([data.MonitorTime, data.AVGValue]);
                })
                arrCO.push({
                    type: 'line',
                    name: obj,
                    data: i.map(function (item) {
                        return item[1];
                    }),
                })
                xray = {
                    data: i.map(function (item) {
                        return item[0];
                    })
                }

                
            }
        })
    }
    function cxlea(obj, n, va) {
    
        $.ajax({
            url: 'http://localhost:8099/caoxiaole/GetNationalControls',
            type: 'get',
            async: false,
            data: {
                "Code": n,
                //污染物名称
                "pollname": "AQI",
                "name": obj
            },
            success: function (data) {

                i = [];
                $(data).each(function (index, data) {
                  
                    i.push([data.MonitorTime, data.AVGValue]);
                })
                arrAQI.push({
                    type: 'line',
                    name: obj,
                    data: i.map(function (item) {
                        return item[1];
                    }),
                })
                xray = {
                    data: i.map(function (item) {
                        return item[0];
                    })
                }

                
            }
        })
    }
</script>
